// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// normal
double normal(double mu, double sigma);
RcppExport SEXP _simSavings_normal(SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(normal(mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// cppi_c
NumericVector cppi_c(int nsim, float alpha, float sigma, float a, int years, float pi);
RcppExport SEXP _simSavings_cppi_c(SEXP nsimSEXP, SEXP alphaSEXP, SEXP sigmaSEXP, SEXP aSEXP, SEXP yearsSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< float >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type years(yearsSEXP);
    Rcpp::traits::input_parameter< float >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(cppi_c(nsim, alpha, sigma, a, years, pi));
    return rcpp_result_gen;
END_RCPP
}
// alt_c
NumericVector alt_c(float alpha, float sigma, float a, int years, int nsim, float K, float A_factor);
RcppExport SEXP _simSavings_alt_c(SEXP alphaSEXP, SEXP sigmaSEXP, SEXP aSEXP, SEXP yearsSEXP, SEXP nsimSEXP, SEXP KSEXP, SEXP A_factorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< float >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type years(yearsSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< float >::type K(KSEXP);
    Rcpp::traits::input_parameter< float >::type A_factor(A_factorSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_c(alpha, sigma, a, years, nsim, K, A_factor));
    return rcpp_result_gen;
END_RCPP
}
// alt_mort_c
NumericVector alt_mort_c(float alpha, float sigma, float a, int years, int nsim, float K, float A_factor, NumericVector M);
RcppExport SEXP _simSavings_alt_mort_c(SEXP alphaSEXP, SEXP sigmaSEXP, SEXP aSEXP, SEXP yearsSEXP, SEXP nsimSEXP, SEXP KSEXP, SEXP A_factorSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< float >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type years(yearsSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< float >::type K(KSEXP);
    Rcpp::traits::input_parameter< float >::type A_factor(A_factorSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_mort_c(alpha, sigma, a, years, nsim, K, A_factor, M));
    return rcpp_result_gen;
END_RCPP
}
// cppi_mort_c
NumericVector cppi_mort_c(int nsim, float alpha, float sigma, float a, int years, float pi, NumericVector M);
RcppExport SEXP _simSavings_cppi_mort_c(SEXP nsimSEXP, SEXP alphaSEXP, SEXP sigmaSEXP, SEXP aSEXP, SEXP yearsSEXP, SEXP piSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< float >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type years(yearsSEXP);
    Rcpp::traits::input_parameter< float >::type pi(piSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(cppi_mort_c(nsim, alpha, sigma, a, years, pi, M));
    return rcpp_result_gen;
END_RCPP
}
// sort_c
NumericVector sort_c(NumericVector vec);
RcppExport SEXP _simSavings_sort_c(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(sort_c(vec));
    return rcpp_result_gen;
END_RCPP
}
// length_c
double length_c(NumericVector vec);
RcppExport SEXP _simSavings_length_c(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(length_c(vec));
    return rcpp_result_gen;
END_RCPP
}
// median_c
double median_c(NumericVector vec);
RcppExport SEXP _simSavings_median_c(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(median_c(vec));
    return rcpp_result_gen;
END_RCPP
}
// equiv_pi_c
double equiv_pi_c(int m, double ret, int nsim, float alpha, float sigma, float a, int years, float pi);
RcppExport SEXP _simSavings_equiv_pi_c(SEXP mSEXP, SEXP retSEXP, SEXP nsimSEXP, SEXP alphaSEXP, SEXP sigmaSEXP, SEXP aSEXP, SEXP yearsSEXP, SEXP piSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type ret(retSEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< float >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type years(yearsSEXP);
    Rcpp::traits::input_parameter< float >::type pi(piSEXP);
    rcpp_result_gen = Rcpp::wrap(equiv_pi_c(m, ret, nsim, alpha, sigma, a, years, pi));
    return rcpp_result_gen;
END_RCPP
}
// return_c
float return_c(NumericVector vec, float a, int years);
RcppExport SEXP _simSavings_return_c(SEXP vecSEXP, SEXP aSEXP, SEXP yearsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< float >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type years(yearsSEXP);
    rcpp_result_gen = Rcpp::wrap(return_c(vec, a, years));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _simSavings_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _package_rcpp_hello_world();

static const R_CallMethodDef CallEntries[] = {
    {"_simSavings_normal", (DL_FUNC) &_simSavings_normal, 2},
    {"_simSavings_cppi_c", (DL_FUNC) &_simSavings_cppi_c, 6},
    {"_simSavings_alt_c", (DL_FUNC) &_simSavings_alt_c, 7},
    {"_simSavings_alt_mort_c", (DL_FUNC) &_simSavings_alt_mort_c, 8},
    {"_simSavings_cppi_mort_c", (DL_FUNC) &_simSavings_cppi_mort_c, 7},
    {"_simSavings_sort_c", (DL_FUNC) &_simSavings_sort_c, 1},
    {"_simSavings_length_c", (DL_FUNC) &_simSavings_length_c, 1},
    {"_simSavings_median_c", (DL_FUNC) &_simSavings_median_c, 1},
    {"_simSavings_equiv_pi_c", (DL_FUNC) &_simSavings_equiv_pi_c, 8},
    {"_simSavings_return_c", (DL_FUNC) &_simSavings_return_c, 3},
    {"_simSavings_rcpp_hello_world", (DL_FUNC) &_simSavings_rcpp_hello_world, 0},
    {"_package_rcpp_hello_world", (DL_FUNC) &_package_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_simSavings(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
